package components

import "strconv"

type UpstreamsProp struct {
    Id int64;
    Url string;
    Online int64;
    Primary int64;
}

func isOnline(online int64) string{
    if online == 1{
        return "text-sm font-medium text-green-500"
    }else{
        return "text-sm font-medium text-red-500"
    }
}

templ Upstreams(data []UpstreamsProp){
        if len(data) == 0 {
            <div>
                <p>No Upstreams Added!</p>
            </div>
        }
        for _, upstream := range data {
        <div class="flex flex-row justify-between bg-gray-800 p-6 rounded-lg shadow-lg">
            <form hx-post="/config/delete-upstream" hx-ext="json-enc" hx-target="#upstreams-list" hx-target-error="#errors" hx-swap="innerHTML" class="flex w-full items-center space-x-4">
                <span id="id" class="text-lg font-semibold text-gray-300 flex-grow text-center max-w-[40%] overflow-hidden text-ellipsis whitespace-nowrap" title={upstream.Url}>
                    {upstream.Url}
                </span>
                <span class={"flex-grow text-center max-w-[20%] overflow-hidden", isOnline(upstream.Online)}>
                    if upstream.Online == 1 {
                        Online} else {Offline}
                </span>
                <span id="id" class="text-md text-center font-semibold text-gray-300 flex-grow max-w-[20%] overflow-hidden text-ellipsis whitespace-nowrap">
                    if upstream.Primary == 1 {
                        Primary} else {Non-Primary}
                </span>
                <input type="hidden" name="id" id={strconv.Itoa(int(upstream.Id))} value={strconv.Itoa(int(upstream.Id))} />
                <button type="submit" class="text-gray-400 hover:text-red-500 transition-colors flex-shrink-0 max-w-[10%] overflow-hidden">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                    </svg>
                </button>
                if upstream.Primary != 1 {      
                 <button hx-post="/config/set-primary" hx-ext="json-enc" hx-target="#upstreams-list" hx-target-error="#errors" hx-swap="afterend" hx-include="[name='id']" class="text-gray-400 hover:text-green-500 transition-colors flex-shrink-0 max-w-[10%] overflow-hidden">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5" />
                    </svg>
                </button>
                }else{
                <button disabled hx-post="/config/set-primary" hx-ext="json-enc" hx-target="#upstreams-list" hx-target-error="#errors" hx-swap="afterend" hx-include="[name='id']" class="text-gray-400 hover:text-green-500 transition-colors flex-shrink-0 max-w-[10%] overflow-hidden invisible">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5" />
                </svg>
                </button>
                }
            </form>
        </div>


    }
}